{"ast":null,"code":"import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nvar ReactTimer = /*#__PURE__*/function (_Component) {\n  _inherits(ReactTimer, _Component);\n\n  function ReactTimer(props) {\n    var _this;\n\n    _classCallCheck(this, ReactTimer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ReactTimer).call(this, props));\n    _this.state = {\n      value: props.start || 0\n    };\n    _this.timer = null;\n    return _this;\n  }\n\n  _createClass(ReactTimer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          onTick = _this$props.onTick,\n          interval = _this$props.interval,\n          end = _this$props.end,\n          onEnd = _this$props.onEnd;\n      this.timer = setInterval(function () {\n        _this2.setState(function (_ref) {\n          var value = _ref.value;\n          return {\n            value: onTick(value)\n          };\n        }, function () {\n          var currentValue = _this2.state.value;\n\n          if (end(currentValue)) {\n            clearInterval(_this2.timer);\n            onEnd(currentValue);\n          }\n        });\n      }, interval);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.timer) {\n        clearInterval(this.timer);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var value = this.state.value;\n      return children(value);\n    }\n  }]);\n\n  return ReactTimer;\n}(Component);\n\nReactTimer.defaultProps = {\n  interval: 1000,\n  onEnd: function onEnd() {},\n  onTick: function onTick() {}\n};\nReactTimer.propTypes = {\n  children: PropTypes.func.isRequired,\n  start: PropTypes.number.isRequired,\n  end: PropTypes.func.isRequired,\n  interval: PropTypes.number,\n  onTick: PropTypes.func,\n  onEnd: PropTypes.func\n};\nexport default ReactTimer;","map":{"version":3,"sources":["../src/index.js"],"names":["ReactTimer","Component","value","props","onTick","interval","end","onEnd","setInterval","currentValue","clearInterval","children","PropTypes","start","func"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAGMA,UAAAA,G;;;sBACJ,K,EAAmB;;;;;oFACjB,K;UACA,K,GAAa;AACXE,MAAAA,KAAK,EAAEC,KAAK,CAALA,KAAAA,IAAe;AADX,K;UAGb,K,GAAA,I;;;;;;wCAGkB;;;wBAMd,KANc,K;UAEhBC,MAFgB,GAAA,WAAA,CAAA,M;UAGhBC,QAHgB,GAAA,WAAA,CAAA,Q;UAIhBC,GAJgB,GAAA,WAAA,CAAA,G;UAKhBC,KALgB,GAAA,WAAA,CAAA,K;WAOlB,K,GAAaC,WAAW,CAAC,YAAM;AAC7B,QAAA,MAAI,CAAJ,QAAA,CAAc,UAAA,IAAA,EAAA;cAAGN,KAAH,GAAA,IAAA,CAAA,K;iBACZ;AAAEA,YAAAA,KAAK,EAAEE,MAAM,CAAA,KAAA;AAAf,W;AADF,SAAA,EAEG,YAAM;cACQK,YADR,GACyB,MAAI,CAD7B,KACyB,CADzB,K;;cAEHH,GAAG,CAAP,YAAO,C,EAAgB;AACrBI,YAAAA,aAAa,CAAC,MAAI,CAAlBA,KAAa,CAAbA;AACAH,YAAAA,KAAK,CAALA,YAAK,CAALA;;AANJ,SAAA;AADsB,OAAA,EAAxB,QAAwB,C;;;;2CAaH;UACjB,KAAJ,K,EAAgB;AACdG,QAAAA,aAAa,CAAC,KAAdA,KAAa,CAAbA;;;;;6BAIK;UACCC,QADD,GACc,KADd,KACc,CADd,Q;UAECT,KAFD,GAEW,KAFX,KAEW,CAFX,K;aAGAS,QAAQ,CAAf,KAAe,C;;;;;EAtCMV,S;;AA0CzBD,UAAU,CAAVA,YAAAA,GAA0B;AACxBK,EAAAA,QAAQ,EADgB,IAAA;AAExBE,EAAAA,KAAK,EAAE,SAAA,KAAA,GAAM,CAFW,CAAA;AAGxBH,EAAAA,MAAM,EAAE,SAAA,MAAA,GAAM,CAAA;AAHU,CAA1BJ;AAMAA,UAAU,CAAVA,SAAAA,GAAuB;AACrBW,EAAAA,QAAQ,EAAEC,SAAS,CAATA,IAAAA,CADW,UAAA;AAErBC,EAAAA,KAAK,EAAED,SAAS,CAATA,MAAAA,CAFc,UAAA;AAGrBN,EAAAA,GAAG,EAAEM,SAAS,CAATA,IAAAA,CAHgB,UAAA;AAIrBP,EAAAA,QAAQ,EAAEO,SAAS,CAJE,MAAA;AAKrBR,EAAAA,MAAM,EAAEQ,SAAS,CALI,IAAA;AAMrBL,EAAAA,KAAK,EAAEK,SAAS,CAACE;AANI,CAAvBd","sourcesContent":["import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ReactTimer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: props.start || 0,\n    };\n    this.timer = null;\n  }\n\n  componentDidMount() {\n    const {\n      onTick,\n      interval,\n      end,\n      onEnd,\n    } = this.props;\n    this.timer = setInterval(() => {\n      this.setState(({ value }) => (\n        { value: onTick(value) }\n      ), () => {\n        const { value: currentValue } = this.state;\n        if (end(currentValue)) {\n          clearInterval(this.timer);\n          onEnd(currentValue);\n        }\n      });\n    }, interval);\n  }\n\n  componentWillUnmount() {\n    if (this.timer) {\n      clearInterval(this.timer);\n    }\n  }\n\n  render() {\n    const { children } = this.props;\n    const { value } = this.state;\n    return children(value);\n  }\n}\n\nReactTimer.defaultProps = {\n  interval: 1000,\n  onEnd: () => { },\n  onTick: () => { },\n};\n\nReactTimer.propTypes = {\n  children: PropTypes.func.isRequired,\n  start: PropTypes.number.isRequired,\n  end: PropTypes.func.isRequired,\n  interval: PropTypes.number,\n  onTick: PropTypes.func,\n  onEnd: PropTypes.func,\n};\n\nexport default ReactTimer;\n"]},"metadata":{},"sourceType":"module"}