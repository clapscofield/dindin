{"ast":null,"code":"// Initial (starting) state\nexport const initialState = {\n  instituicao: null\n}; // Our root reducer starts with the initial state\n// and must return a representation of the next state\n\nexport const rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.LOGIN_INSTITUICAO:\n      return { ...state,\n        instituicao: action.payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/clarissescofield/Desktop/2020.2/ES/studyWar/front/src/redux/reducers.js"],"names":["initialState","instituicao","rootReducer","state","action","type","types","LOGIN_INSTITUICAO","payload"],"mappings":"AAAA;AACA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,WAAW,EAAE;AADW,CAArB,C,CAIL;AACA;;AACA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKC,KAAK,CAACC,iBAAX;AACE,aAAO,EAAE,GAAGJ,KAAL;AAAYF,QAAAA,WAAW,EAAEG,MAAM,CAACI;AAAhC,OAAP;;AACF;AACE,aAAOL,KAAP;AAJJ;AAMD,CAPM","sourcesContent":["// Initial (starting) state\nexport const initialState = {\n    instituicao: null\n  };\n  \n  // Our root reducer starts with the initial state\n  // and must return a representation of the next state\n  export const rootReducer = (state = initialState, action) => {\n    switch (action.type) {\n      case types.LOGIN_INSTITUICAO:\n        return { ...state, instituicao: action.payload };\n      default:\n        return state;\n    }\n  };"]},"metadata":{},"sourceType":"module"}