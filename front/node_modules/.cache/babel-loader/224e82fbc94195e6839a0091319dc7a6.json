{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/clarissescofield/Desktop/2020.2/ES/studyWar/front/src/features/cadastroAluno/views/CadastroAluno.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Form, Input, Container, Row, Col, FormGroup, Label, UncontrolledAlert } from \"reactstrap\";\nimport Datetime from \"react-datetime\";\nimport Footer from \"components/Footer/Footer.js\";\nimport { connect } from \"react-redux\";\nimport CadastroAlunoManager from \"../CadastroAlunoManager\";\nimport { setMessage } from \"../../../redux/actionCreators\";\nimport { clearMessage } from \"../../../redux/actionCreators\";\n\nconst CadastroAluno = props => {\n  _s();\n\n  const {\n    equipes,\n    idGuerra,\n    idInstituicao,\n    message\n  } = props;\n  const [botaoHabilitado, setBotaoHabilitado] = useState(true);\n  const [botaoHabilitadoDashboard, setBotaoHabilitadoDashboard] = useState(false);\n  const [nome, setNome] = useState(null);\n  const [matricula, setMatricula] = useState(null);\n  const [dataNascimento, setDataNascimento] = useState(null);\n  const [turma, setTurma] = useState(null);\n  const [email, setEmail] = useState();\n  const [senha, setSenha] = useState(null);\n  const [equipe, setEquipe] = useState(null);\n  const [sucesso, setSucesso] = useState(false);\n  useEffect(() => {\n    setBotaoHabilitado(nome && matricula && dataNascimento && turma && email && senha);\n  }, [setBotaoHabilitado, nome, matricula, dataNascimento, turma, email, senha]);\n\n  const cadastrarAluno = async () => {\n    const aluno = {\n      nome: nome,\n      dataNascimento: dataNascimento,\n      turma: turma,\n      matricula: matricula,\n      email: email,\n      senha: senha,\n      horasEstudadas: \"0\",\n      idEquipe: equipe,\n      idGuerra: idGuerra,\n      idInstituicao: idInstituicao\n    };\n    const resultado = await CadastroAlunoManager.criarAluno(aluno);\n    const resultadoAtualizar = atualizarEquipe();\n\n    if (resultado && resultadoAtualizar) {\n      setBotaoHabilitadoDashboard(true);\n      setSucesso(true);\n      setMessage(\"Estudante cadastrado com sucesso!\");\n    } else {\n      setSucesso(false);\n      setMessage(\"Erro ao cadastrar\");\n    }\n  };\n\n  const atualizarEquipe = async () => {\n    const idEquipe = equipe;\n    const idAluno = matricula;\n    const resultado = await CadastroAlunoManager.atualizarEquipeAluno(idEquipe, idAluno);\n    return resultado;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page-header-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  className: \"title\",\n                  children: \"Cadastrar Novo Estudante\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form, {\n                  className: \"form\",\n                  children: [/*#__PURE__*/_jsxDEV(Row, {\n                    children: /*#__PURE__*/_jsxDEV(Col, {\n                      children: /*#__PURE__*/_jsxDEV(Input, {\n                        value: nome,\n                        placeholder: \"Nome completo\",\n                        type: \"text\",\n                        onChange: e => setNome(e.target.value),\n                        className: \"mb-4\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 103,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 102,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      className: \"mb-4\",\n                      children: /*#__PURE__*/_jsxDEV(Datetime, {\n                        value: dataNascimento,\n                        timeFormat: false,\n                        inputProps: {\n                          placeholder: \"Data de nascimento\"\n                        },\n                        dateFormat: \"DD/MM/YYYY\",\n                        onChange: e => setDataNascimento(e)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 114,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 113,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      children: /*#__PURE__*/_jsxDEV(Input, {\n                        value: turma,\n                        placeholder: \"Turma\",\n                        type: \"text\",\n                        onChange: e => setTurma(e.target.value),\n                        className: \"mb-4\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 123,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 122,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    children: /*#__PURE__*/_jsxDEV(Col, {\n                      children: /*#__PURE__*/_jsxDEV(Input, {\n                        value: matricula,\n                        placeholder: \"Matr\\xEDcula\",\n                        type: \"text\",\n                        onChange: e => setMatricula(e.target.value),\n                        className: \"mb-4\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 134,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      children: /*#__PURE__*/_jsxDEV(Input, {\n                        value: email,\n                        placeholder: \"Email\",\n                        type: \"text\",\n                        onChange: e => setEmail(e.target.value),\n                        className: \"mb-4\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 145,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 144,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      children: /*#__PURE__*/_jsxDEV(Input, {\n                        value: senha,\n                        placeholder: \"Senha\",\n                        type: \"text\",\n                        onChange: e => setSenha(e.target.value),\n                        className: \"mb-4\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 154,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 153,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  className: \"title\",\n                  children: \" Selecionar Equipe \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form, {\n                  className: \"form\",\n                  children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      for: \"exampleSelect1\",\n                      children: \"Selecione a equipe\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 171,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      value: equipe,\n                      type: \"select\",\n                      name: \"select\",\n                      onChange: e => {\n                        setEquipe(e.target.value);\n                      },\n                      children: equipes && equipes.map(eq => {\n                        return /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: eq,\n                          children: [\" \", eq, \" \"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 182,\n                          columnNumber: 36\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 172,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"btn-round\",\n                  color: \"primary\",\n                  size: \"lg\",\n                  disabled: !botaoHabilitado,\n                  onClick: () => cadastrarAluno(),\n                  children: \"Cadastrar aluno\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"btn-round\",\n                  color: \"success\",\n                  size: \"lg\",\n                  disabled: !botaoHabilitadoDashboard,\n                  href: \"/landing-inst\",\n                  children: \"Ir para dashboard\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), message && /*#__PURE__*/_jsxDEV(Alert, {\n              color: sucesso ? \"success\" : \"danger\",\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"register-bg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(CadastroAluno, \"Tz9XaHmF7URst2hXM5t1nZKd1PI=\");\n\n_c = CadastroAluno;\n\nconst mapStateToProps = state => {\n  return {\n    equipes: state.equipe && state.equipe.equipes.equipes,\n    idGuerra: state.idGuerra,\n    idInstituicao: state.auth && state.auth.user.usuario,\n    message: state.message\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setMessage: message => dispatch(setMessage(message)),\n  clearMessage: () => dispatch(clearMessage())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CadastroAluno);\n\nvar _c;\n\n$RefreshReg$(_c, \"CadastroAluno\");","map":{"version":3,"sources":["/Users/clarissescofield/Desktop/2020.2/ES/studyWar/front/src/features/cadastroAluno/views/CadastroAluno.jsx"],"names":["React","useEffect","useState","Button","Form","Input","Container","Row","Col","FormGroup","Label","UncontrolledAlert","Datetime","Footer","connect","CadastroAlunoManager","setMessage","clearMessage","CadastroAluno","props","equipes","idGuerra","idInstituicao","message","botaoHabilitado","setBotaoHabilitado","botaoHabilitadoDashboard","setBotaoHabilitadoDashboard","nome","setNome","matricula","setMatricula","dataNascimento","setDataNascimento","turma","setTurma","email","setEmail","senha","setSenha","equipe","setEquipe","sucesso","setSucesso","cadastrarAluno","aluno","horasEstudadas","idEquipe","resultado","criarAluno","resultadoAtualizar","atualizarEquipe","idAluno","atualizarEquipeAluno","e","target","value","placeholder","map","eq","mapStateToProps","state","auth","user","usuario","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Form,\n  Input,\n  Container,\n  Row,\n  Col,\n  FormGroup,\n  Label,\n  UncontrolledAlert\n} from \"reactstrap\";\nimport Datetime from \"react-datetime\";\nimport Footer from \"components/Footer/Footer.js\";\nimport { connect } from \"react-redux\";\nimport CadastroAlunoManager from \"../CadastroAlunoManager\";\nimport { setMessage } from \"../../../redux/actionCreators\";\nimport { clearMessage } from \"../../../redux/actionCreators\";\n\nconst CadastroAluno = (props) => {\n  const { equipes, idGuerra, idInstituicao, message } = props;\n\n  const [botaoHabilitado, setBotaoHabilitado] = useState(true);\n  const [botaoHabilitadoDashboard, setBotaoHabilitadoDashboard] = useState(\n    false\n  );\n\n  const [nome, setNome] = useState(null);\n  const [matricula, setMatricula] = useState(null);\n  const [dataNascimento, setDataNascimento] = useState(null);\n  const [turma, setTurma] = useState(null);\n  const [email, setEmail] = useState();\n  const [senha, setSenha] = useState(null);\n  const [equipe, setEquipe] = useState(null);\n\n  const [sucesso, setSucesso] = useState(false);\n\n  useEffect(() => {\n    setBotaoHabilitado(\n      nome && matricula && dataNascimento && turma && email && senha\n    );\n  }, [\n    setBotaoHabilitado,\n    nome,\n    matricula,\n    dataNascimento,\n    turma,\n    email,\n    senha\n  ]);\n\n  const cadastrarAluno = async () => {\n    const aluno = {\n      nome: nome,\n      dataNascimento: dataNascimento,\n      turma: turma,\n      matricula: matricula,\n      email: email,\n      senha: senha,\n      horasEstudadas: \"0\",\n      idEquipe: equipe,\n      idGuerra: idGuerra,\n      idInstituicao: idInstituicao\n    };\n    const resultado = await CadastroAlunoManager.criarAluno(aluno);\n\n    const resultadoAtualizar = atualizarEquipe();\n\n    if (resultado && resultadoAtualizar) {\n      setBotaoHabilitadoDashboard(true);\n      setSucesso(true);\n      setMessage(\"Estudante cadastrado com sucesso!\");\n    } else {\n      setSucesso(false);\n      setMessage(\"Erro ao cadastrar\");\n    }\n  };\n\n  const atualizarEquipe = async () => {\n    const idEquipe = equipe;\n    const idAluno = matricula;\n\n    const resultado = await CadastroAlunoManager.atualizarEquipeAluno(\n      idEquipe,\n      idAluno\n    );\n    return resultado;\n  };\n\n  return (\n    <>\n      <div className=\"wrapper\">\n        <div className=\"page-header\">\n          <div className=\"page-header-image\" />\n          <div className=\"content\">\n            <Container>\n              <Row>\n                <Col>\n                  <h1 className=\"title\">Cadastrar Novo Estudante</h1>\n                  <Form className=\"form\">\n                    <Row>\n                      <Col>\n                        <Input\n                          value={nome}\n                          placeholder=\"Nome completo\"\n                          type=\"text\"\n                          onChange={(e) => setNome(e.target.value)}\n                          className={\"mb-4\"}\n                        />\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col className={\"mb-4\"}>\n                        <Datetime\n                          value={dataNascimento}\n                          timeFormat={false}\n                          inputProps={{ placeholder: \"Data de nascimento\" }}\n                          dateFormat={\"DD/MM/YYYY\"}\n                          onChange={(e) => setDataNascimento(e)}\n                        />\n                      </Col>\n                      <Col>\n                        <Input\n                          value={turma}\n                          placeholder=\"Turma\"\n                          type=\"text\"\n                          onChange={(e) => setTurma(e.target.value)}\n                          className={\"mb-4\"}\n                        />\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col>\n                        <Input\n                          value={matricula}\n                          placeholder=\"Matrícula\"\n                          type=\"text\"\n                          onChange={(e) => setMatricula(e.target.value)}\n                          className={\"mb-4\"}\n                        />\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col>\n                        <Input\n                          value={email}\n                          placeholder=\"Email\"\n                          type=\"text\"\n                          onChange={(e) => setEmail(e.target.value)}\n                          className={\"mb-4\"}\n                        />\n                      </Col>\n                      <Col>\n                        <Input\n                          value={senha}\n                          placeholder=\"Senha\"\n                          type=\"text\"\n                          onChange={(e) => setSenha(e.target.value)}\n                          className={\"mb-4\"}\n                        />\n                      </Col>\n                    </Row>\n                  </Form>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <h1 className=\"title\"> Selecionar Equipe </h1>\n                  <Form className=\"form\">\n                    <FormGroup>\n                      <Label for=\"exampleSelect1\">Selecione a equipe</Label>\n                      <Input\n                        value={equipe}\n                        type=\"select\"\n                        name=\"select\"\n                        onChange={(e) => {\n                          setEquipe(e.target.value);\n                        }}\n                      >\n                        {equipes &&\n                          equipes.map((eq) => {\n                            return <option value={eq}> {eq} </option>;\n                          })}\n                      </Input>\n                    </FormGroup>\n                  </Form>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <Button\n                    className=\"btn-round\"\n                    color=\"primary\"\n                    size=\"lg\"\n                    disabled={!botaoHabilitado}\n                    onClick={() => cadastrarAluno()}\n                  >\n                    Cadastrar aluno\n                  </Button>\n                </Col>\n                <Col>\n                  <Button\n                    className=\"btn-round\"\n                    color=\"success\"\n                    size=\"lg\"\n                    disabled={!botaoHabilitadoDashboard}\n                    href=\"/landing-inst\"\n                  >\n                    Ir para dashboard\n                  </Button>\n                </Col>\n              </Row>\n              {message && (\n                <Alert color={sucesso ? \"success\" : \"danger\"}>{message}</Alert>\n              )}\n              <div className=\"register-bg\" />\n            </Container>\n          </div>\n        </div>\n        <Footer />\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    equipes: state.equipe && state.equipe.equipes.equipes,\n    idGuerra: state.idGuerra,\n    idInstituicao: state.auth && state.auth.user.usuario,\n    message: state.message\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  setMessage: (message) => dispatch(setMessage(message)),\n  clearMessage: () => dispatch(clearMessage())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CadastroAluno);\n"]},"metadata":{},"sourceType":"module"}