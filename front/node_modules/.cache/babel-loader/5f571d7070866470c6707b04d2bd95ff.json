{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/clarissescofield/Desktop/2020.2/ES/studyWar/front/src/features/TimerEst/views/TimerEst.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Row, Col, Button, Form, InputGroup, InputGroupAddon, InputGroupText, Input } from \"reactstrap\";\nimport classnames from \"classnames\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\nimport ModalCancelamento from \"./ModalCancelamento\";\nimport TimerEstudanteManager from \"../TimerEstudanteManager\";\nconst minuteSeconds = 60;\nconst hourSeconds = 3600 * 2;\n\nconst TimerEst = props => {\n  _s();\n\n  const {\n    matricula\n  } = props;\n  useEffect(() => {\n    document.body.classList.toggle(\"landing-page\"); // Specify how to clean up after this effect:\n\n    return function cleanup() {\n      document.body.classList.toggle(\"landing-page\");\n    };\n  }, []);\n  const [tempo, setTempo] = useState(\"\");\n  const [comecar, setComecar] = useState(false);\n  const [botaoDesabilitado, setBotaoDesabilitado] = useState(true);\n  const [componenteTempo, setComponenteTempo] = useState(null);\n  const [modalAberto, setModalAberto] = useState(false);\n  const [terminou, setTerminou] = useState(false);\n  const [timeFocus, setTimeFocus] = useState(false);\n\n  const validarTempo = tempoVal => {\n    if (tempoVal >= 120 || tempoVal === 0) {\n      setBotaoDesabilitado(true);\n    } else {\n      setBotaoDesabilitado(false);\n    }\n\n    return tempoVal;\n  };\n\n  const getTimeMinutes = time => time % hourSeconds / minuteSeconds | 0;\n\n  const startTime = () => Date.now() / 1000; // use UNIX timestamp in seconds\n\n\n  const renderTime = (dimension, time) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        justifyContent: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time\",\n        children: time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: dimension\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  };\n\n  const timerProps = {\n    isPlaying: true,\n    size: 240,\n    strokeWidth: 10\n  };\n\n  const aoTerminar = async () => {\n    setComecar(false);\n    setTerminou(true);\n    await TimerEstudanteManager.adicionarEstudo(matricula, tempo);\n  };\n\n  const ComponenteTimer = remainingTime => {\n    return /*#__PURE__*/_jsxDEV(CountdownCircleTimer, { ...timerProps,\n      colors: [[\"#00F2C3\"]],\n      duration: hourSeconds,\n      initialRemainingTime: remainingTime % hourSeconds,\n      onComplete: totalTime => {\n        console.log(\"ola\");\n        aoTerminar();\n      },\n      children: ({\n        elapsedTime\n      }) => renderTime(\"minutos\", getTimeMinutes(hourSeconds - elapsedTime))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  };\n\n  const iniciarCronometro = () => {\n    const endTime = startTime() + tempo * 60; // use UNIX timestamp in seconds\n\n    const remainingTime = endTime - startTime();\n    setComponenteTempo(ComponenteTimer(remainingTime));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!comecar && !terminou && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"row-grid justify-content-between align-items-center text-left\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          lg: \"12\",\n          md: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-white mb-1\",\n            children: \"Quanto tempo quer estudar hoje?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-white\",\n            children: \"Coloque seu tempo de estudos em minutos. Voc\\xEA pode estudar at\\xE9 120 minutos por vez. Voc\\xEA pode reiniciar se acabar o seu tempo, mas lembre sempre de ter um tempo de descanso entre os estudos.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            className: \"form mb-4 mt-4\",\n            children: /*#__PURE__*/_jsxDEV(InputGroup, {\n              className: classnames({\n                \"input-group-focus\": timeFocus\n              }),\n              children: [/*#__PURE__*/_jsxDEV(InputGroupAddon, {\n                addonType: \"prepend\",\n                children: /*#__PURE__*/_jsxDEV(InputGroupText, {\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"tim-icons icon-time-alarm\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                value: tempo,\n                onFocus: e => setTimeFocus(true),\n                onBlur: e => setTimeFocus(false),\n                placeholder: \"Tempo de estudo em minutos\",\n                type: \"text\",\n                maxLength: 3,\n                onChange: e => setTempo(validarTempo(e.target.value))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn-round\",\n            color: \"success\",\n            size: \"md\",\n            onClick: () => {\n              setComecar(true);\n              iniciarCronometro();\n            },\n            disabled: botaoDesabilitado,\n            children: \"Come\\xE7ar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)\n    }, void 0, false), comecar && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"row-grid justify-content-between align-items-center text-center\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-white\",\n            children: [\"Bons Estudos! \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              justifyContent: \"center\",\n              marginLeft: \"300px\",\n              marginBottom: \"50px\",\n              marginTop: \"50px\"\n            },\n            children: componenteTempo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn-round m-4\",\n            color: \"warning\",\n            size: \"md\",\n            onClick: e => {\n              setModalAberto(true);\n            },\n            children: \"Interromper\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ModalCancelamento, {\n            modalAberto: modalAberto,\n            setModalAberto: setModalAberto,\n            acaoSair: setComecar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)\n    }, void 0, false), terminou && /*#__PURE__*/_jsxDEV(Row, {\n      className: \"row-grid justify-content-between align-items-center text-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-white\",\n          children: [\"Parab\\xE9ns! Voc\\xEA terminou seu tempo de estudos! \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 61\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn-round\",\n          color: \"success\",\n          size: \"md\",\n          href: \"/landing-est\",\n          children: \"Voltar para p\\xE1gina inicial\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TimerEst, \"nfMaM++4ry+KzJAO6PCT9zw09Vc=\");\n\n_c = TimerEst;\nexport default TimerEst;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimerEst\");","map":{"version":3,"sources":["/Users/clarissescofield/Desktop/2020.2/ES/studyWar/front/src/features/TimerEst/views/TimerEst.jsx"],"names":["React","useEffect","useState","Row","Col","Button","Form","InputGroup","InputGroupAddon","InputGroupText","Input","classnames","CountdownCircleTimer","ModalCancelamento","TimerEstudanteManager","minuteSeconds","hourSeconds","TimerEst","props","matricula","document","body","classList","toggle","cleanup","tempo","setTempo","comecar","setComecar","botaoDesabilitado","setBotaoDesabilitado","componenteTempo","setComponenteTempo","modalAberto","setModalAberto","terminou","setTerminou","timeFocus","setTimeFocus","validarTempo","tempoVal","getTimeMinutes","time","startTime","Date","now","renderTime","dimension","justifyContent","timerProps","isPlaying","size","strokeWidth","aoTerminar","adicionarEstudo","ComponenteTimer","remainingTime","totalTime","console","log","elapsedTime","iniciarCronometro","endTime","e","target","value","marginLeft","marginBottom","marginTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Row,\n  Col,\n  Button,\n  Form,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Input\n} from \"reactstrap\";\nimport classnames from \"classnames\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\nimport ModalCancelamento from \"./ModalCancelamento\";\nimport TimerEstudanteManager from \"../TimerEstudanteManager\";\n\nconst minuteSeconds = 60;\nconst hourSeconds = 3600 * 2;\n\nconst TimerEst = (props) => {\n  const { matricula } = props;\n  useEffect(() => {\n    document.body.classList.toggle(\"landing-page\");\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      document.body.classList.toggle(\"landing-page\");\n    };\n  }, []);\n\n  const [tempo, setTempo] = useState(\"\");\n  const [comecar, setComecar] = useState(false);\n  const [botaoDesabilitado, setBotaoDesabilitado] = useState(true);\n  const [componenteTempo, setComponenteTempo] = useState(null);\n  const [modalAberto, setModalAberto] = useState(false);\n  const [terminou, setTerminou] = useState(false);\n  const [timeFocus, setTimeFocus] = useState(false);\n\n  const validarTempo = (tempoVal) => {\n    if (tempoVal >= 120 || tempoVal === 0) {\n      setBotaoDesabilitado(true);\n    } else {\n      setBotaoDesabilitado(false);\n    }\n    return tempoVal;\n  };\n\n  const getTimeMinutes = (time) => ((time % hourSeconds) / minuteSeconds) | 0;\n  const startTime = () => Date.now() / 1000; // use UNIX timestamp in seconds\n\n  const renderTime = (dimension, time) => {\n    return (\n      <div style={{ justifyContent: \"center\" }}>\n        <div className=\"time\">{time}</div>\n        <div>{dimension}</div>\n      </div>\n    );\n  };\n\n  const timerProps = {\n    isPlaying: true,\n    size: 240,\n    strokeWidth: 10\n  };\n\n  const aoTerminar = async () => {\n    setComecar(false);\n    setTerminou(true);\n    await TimerEstudanteManager.adicionarEstudo(matricula, tempo);\n  };\n\n  const ComponenteTimer = (remainingTime) => {\n    return (\n      <CountdownCircleTimer\n        {...timerProps}\n        colors={[[\"#00F2C3\"]]}\n        duration={hourSeconds}\n        initialRemainingTime={remainingTime % hourSeconds}\n        onComplete={(totalTime) => {\n          console.log(\"ola\");\n          aoTerminar();\n        }}\n      >\n        {({ elapsedTime }) =>\n          renderTime(\"minutos\", getTimeMinutes(hourSeconds - elapsedTime))\n        }\n      </CountdownCircleTimer>\n    );\n  };\n\n  const iniciarCronometro = () => {\n    const endTime = startTime() + tempo * 60; // use UNIX timestamp in seconds\n    const remainingTime = endTime - startTime();\n    setComponenteTempo(ComponenteTimer(remainingTime));\n  };\n\n  return (\n    <>\n      {!comecar && !terminou && (\n        <>\n          <Row className=\"row-grid justify-content-between align-items-center text-left\">\n            <Col lg=\"12\" md=\"6\">\n              <h3 className=\"text-white mb-1\">\n                Quanto tempo quer estudar hoje?\n              </h3>\n              <p className=\"text-white\">\n                Coloque seu tempo de estudos em minutos. Você pode estudar até\n                120 minutos por vez. Você pode reiniciar se acabar o seu tempo,\n                mas lembre sempre de ter um tempo de descanso entre os estudos.\n              </p>\n              <Form className=\"form mb-4 mt-4\">\n                <InputGroup\n                  className={classnames({\n                    \"input-group-focus\": timeFocus\n                  })}\n                >\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"tim-icons icon-time-alarm\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input\n                    value={tempo}\n                    onFocus={(e) => setTimeFocus(true)}\n                    onBlur={(e) => setTimeFocus(false)}\n                    placeholder=\"Tempo de estudo em minutos\"\n                    type=\"text\"\n                    maxLength={3}\n                    onChange={(e) => setTempo(validarTempo(e.target.value))}\n                  />\n                </InputGroup>\n              </Form>\n              <Button\n                className=\"btn-round\"\n                color=\"success\"\n                size=\"md\"\n                onClick={() => {\n                  setComecar(true);\n                  iniciarCronometro();\n                }}\n                disabled={botaoDesabilitado}\n              >\n                Começar\n              </Button>\n            </Col>\n          </Row>\n        </>\n      )}\n      {comecar && (\n        <>\n          <Row className=\"row-grid justify-content-between align-items-center text-center\">\n            <Col>\n              <h1 className=\"text-white\">\n                Bons Estudos! <br />\n              </h1>\n              <div\n                style={{\n                  justifyContent: \"center\",\n                  marginLeft: \"300px\",\n                  marginBottom: \"50px\",\n                  marginTop: \"50px\"\n                }}\n              >\n                {componenteTempo}\n              </div>\n              <Button\n                className=\"btn-round m-4\"\n                color=\"warning\"\n                size=\"md\"\n                onClick={(e) => {\n                  setModalAberto(true);\n                }}\n              >\n                Interromper\n              </Button>\n              <ModalCancelamento\n                modalAberto={modalAberto}\n                setModalAberto={setModalAberto}\n                acaoSair={setComecar}\n              />\n            </Col>\n          </Row>\n        </>\n      )}\n      {terminou && (\n        <Row className=\"row-grid justify-content-between align-items-center text-center\">\n          <Col>\n            <h1 className=\"text-white\">\n              Parabéns! Você terminou seu tempo de estudos! <br />\n            </h1>\n            <Button\n              className=\"btn-round\"\n              color=\"success\"\n              size=\"md\"\n              href=\"/landing-est\"\n            >\n              Voltar para página inicial\n            </Button>\n          </Col>\n        </Row>\n      )}\n    </>\n  );\n};\nexport default TimerEst;\n"]},"metadata":{},"sourceType":"module"}